DROP TABLE TRIANGULOS;
DROP TYPE BODY TIPO_TRIANGULO;
DROP TYPE TIPO_TRIANGULO;
--Un tipo llamado tipo_triángulo con los atributos base number,
--altura number y una función llamada area return number.
CREATE OR REPLACE TYPE TIPO_TRIANGULO AS OBJECT(
BASE NUMBER,
ALTURA NUMBER,
MEMBER FUNCTION AREA RETURN NUMBER);
/
--Crear el cuerpo body para dicho tipo
CREATE OR REPLACE TYPE BODY TIPO_TRIANGULO AS
  MEMBER FUNCTION AREA RETURN NUMBER IS
  A NUMBER;
  BEGIN
  A:=(BASE*ALTURA)/2;
    RETURN A;
  END;
END;
/  
--Crear una tabla relacional llamada triangulos para almacenar los triángulos, 
--con las columnas Id number y triangulo de tipo_triangulo.
CREATE TABLE TRIANGULOS (ID NUMBER, TRIANGULO TIPO_TRIANGULO);

--Insertar dos triángulos con los siguientes valores
--Id=1, base=5, altura=5, Id=2, base=10, altura=10

INSERT INTO TRIANGULOS VALUES(1,TIPO_TRIANGULO(5,5));
INSERT INTO TRIANGULOS VALUES(2,TIPO_TRIANGULO(10,10));

SET SERVEROUTPUT ON;
--Crear un bloque PL/SQL para recorrer la tabla triángulos e invocar al método área
DECLARE 
   T TIPO_TRIANGULO;
BEGIN
   FOR I IN(SELECT * FROM TRIANGULOS)LOOP
	 T:=I.TRIANGULO;
	 DBMS_OUTPUT.PUT_LINE('EL TRIANGULO CON ID: '||I.ID);
	 DBMS_OUTPUT.PUT_LINE('CON BASE '||T.BASE);
	 DBMS_OUTPUT.PUT_LINE('CON ALTURA: '||T.ALTURA);
	 DBMS_OUTPUT.PUT_LINE('CON AREA '||T.AREA);
	END LOOP;
END;
/	
-- recorrer el tipo con un cursor para sacarlo por un registro y un while
DECLARE
  CURSOR C_CUR IS SELECT 
    ID, T.TRIANGULO.BASE B, T.TRIANGULO.ALTURA A, T.TRIANGULO.AREA() SUPERFICIE FROM TRIANGULOS T; 
	V_CUR C_CUR%ROWTYPE;
BEGIN

  OPEN C_CUR;
  FETCH C_CUR INTO V_CUR;
  WHILE C_CUR%FOUND LOOP
     DBMS_OUTPUT.PUT_LINE('EL TRIANGULO CON ID: '||V_CUR.ID);
	 DBMS_OUTPUT.PUT_LINE('CON BASE '||V_CUR.B);
	 DBMS_OUTPUT.PUT_LINE('CON ALTURA: '||V_CUR.A);
	 DBMS_OUTPUT.PUT_LINE('CON AREA '||V_CUR.SUPERFICIE);
	 FETCH C_CUR INTO V_CUR;
  END LOOP;
  CLOSE C_CUR;
END;
/  
-- RECORRER CON CURSOR Y FOR
DECLARE
  CURSOR C_TRIANGULOS IS SELECT * FROM TRIANGULOS;
BEGIN
  FOR V_TRIANGULO IN C_TRIANGULOS LOOP
     DBMS_OUTPUT.PUT_LINE('EL TRIANGULO CON ID: '||V_TRIANGULO.ID);
	 DBMS_OUTPUT.PUT_LINE('CON BASE '||V_TRIANGULO.TRIANGULO.BASE);
	 DBMS_OUTPUT.PUT_LINE('CON ALTURA: '||V_TRIANGULO.TRIANGULO.ALTURA);
	 DBMS_OUTPUT.PUT_LINE('CON AREA '||V_TRIANGULO.TRIANGULO.AREA());
   END LOOP;
END;
/   
	
